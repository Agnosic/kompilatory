Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> block
Rule 7     instruction -> if
Rule 8     instruction -> print
Rule 9     instruction -> while
Rule 10    instruction -> for
Rule 11    instruction -> break
Rule 12    instruction -> continue
Rule 13    instruction -> return
Rule 14    instruction -> assign
Rule 15    instruction -> assign_in_array
Rule 16    block -> { instructions }
Rule 17    if -> IF ( assignment ) instruction
Rule 18    if -> IF ( assignment ) instruction ELSE instruction
Rule 19    print -> PRINT arguments ;
Rule 20    arguments -> assignment
Rule 21    arguments -> assignment , arguments
Rule 22    while -> WHILE ( assignment ) instruction
Rule 23    for -> FOR ID = range instruction
Rule 24    range -> expression : expression
Rule 25    break -> BREAK ;
Rule 26    continue -> CONTINUE ;
Rule 27    return -> RETURN ;
Rule 28    return -> RETURN assignment ;
Rule 29    assign -> ID = assign
Rule 30    assign -> ID = assignment ;
Rule 31    assign -> ID PLUSASSIGN assignment ;
Rule 32    assign -> ID MINUSASSIGN assignment ;
Rule 33    assign -> ID TIMESASSIGN assignment ;
Rule 34    assign -> ID DIVIDEASSIGN assignment ;
Rule 35    assign_in_array -> ID array_range = assign
Rule 36    assign_in_array -> ID array_range = assignment ;
Rule 37    assign_in_array -> ID array_range PLUSASSIGN assignment ;
Rule 38    assign_in_array -> ID array_range MINUSASSIGN assignment ;
Rule 39    assign_in_array -> ID array_range TIMESASSIGN assignment ;
Rule 40    assign_in_array -> ID array_range DIVIDEASSIGN assignment ;
Rule 41    array_range -> [ INTNUM , INTNUM ]
Rule 42    array_range -> [ INTNUM ]
Rule 43    assignment -> STRING
Rule 44    assignment -> matrix_special_features
Rule 45    assignment -> relational_expression
Rule 46    assignment -> expression
Rule 47    assignment -> array
Rule 48    array -> [ ]
Rule 49    array -> [ dimensions ]
Rule 50    dimensions -> values
Rule 51    dimensions -> values ; dimensions
Rule 52    values -> value
Rule 53    values -> value , values
Rule 54    value -> STRING
Rule 55    value -> number
Rule 56    relational_expression -> expression < expression
Rule 57    relational_expression -> expression > expression
Rule 58    relational_expression -> expression LESSEQUAL expression
Rule 59    relational_expression -> expression GREATEREQUAL expression
Rule 60    relational_expression -> expression EQUAL expression
Rule 61    relational_expression -> expression NOTEQUAL expression
Rule 62    expression -> expression + expression
Rule 63    expression -> expression - expression
Rule 64    expression -> expression * expression
Rule 65    expression -> expression / expression
Rule 66    expression -> expression DOTPLUS expression
Rule 67    expression -> expression DOTMINUS expression
Rule 68    expression -> expression DOTTIMES expression
Rule 69    expression -> expression DOTDIVIDE expression
Rule 70    expression -> number
Rule 71    expression -> ID
Rule 72    expression -> ID TRANSPOSE
Rule 73    expression -> - expression
Rule 74    matrix_special_features -> EYE ( INTNUM )
Rule 75    matrix_special_features -> ZEROS ( INTNUM )
Rule 76    matrix_special_features -> ONES ( INTNUM )
Rule 77    number -> INTNUM
Rule 78    number -> FLOATNUM

Terminals, with rules where they appear

(                    : 17 18 22 74 75 76
)                    : 17 18 22 74 75 76
*                    : 64
+                    : 62
,                    : 21 41 53
-                    : 63 73
/                    : 65
:                    : 24
;                    : 19 25 26 27 28 30 31 32 33 34 36 37 38 39 40 51
<                    : 56
=                    : 23 29 30 35 36
>                    : 57
BREAK                : 25
COMMENT              : 
CONTINUE             : 26
DIVIDEASSIGN         : 34 40
DOTDIVIDE            : 69
DOTMINUS             : 67
DOTPLUS              : 66
DOTTIMES             : 68
ELSE                 : 18
EQUAL                : 60
EYE                  : 74
FLOATNUM             : 78
FOR                  : 23
GREATEREQUAL         : 59
ID                   : 23 29 30 31 32 33 34 35 36 37 38 39 40 71 72
IF                   : 17 18
INTNUM               : 41 41 42 74 75 76 77
LESSEQUAL            : 58
MINUSASSIGN          : 32 38
NOTEQUAL             : 61
ONES                 : 76
PLUSASSIGN           : 31 37
PRINT                : 19
RETURN               : 27 28
STRING               : 43 54
TIMESASSIGN          : 33 39
TRANSPOSE            : 72
WHILE                : 22
ZEROS                : 75
[                    : 41 42 48 49
]                    : 41 42 48 49
error                : 
{                    : 16
}                    : 16

Nonterminals, with rules where they appear

arguments            : 19 21
array                : 47
array_range          : 35 36 37 38 39 40
assign               : 14 29 35
assign_in_array      : 15
assignment           : 17 18 20 21 22 28 30 31 32 33 34 36 37 38 39 40
block                : 6
break                : 11
continue             : 12
dimensions           : 49 51
expression           : 24 24 46 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 73
for                  : 10
if                   : 7
instruction          : 4 5 17 18 18 22 23
instructions         : 2 4 16
instructions_opt     : 1
matrix_special_features : 44
number               : 55 70
print                : 8
program              : 0
range                : 23
relational_expression : 45
return               : 13
value                : 52 53
values               : 50 51 53
while                : 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID PLUSASSIGN assignment ;
    (32) assign -> . ID MINUSASSIGN assignment ;
    (33) assign -> . ID TIMESASSIGN assignment ;
    (34) assign -> . ID DIVIDEASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range PLUSASSIGN assignment ;
    (38) assign_in_array -> . ID array_range MINUSASSIGN assignment ;
    (39) assign_in_array -> . ID array_range TIMESASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVIDEASSIGN assignment ;

    $end            reduce using rule 3 (instructions_opt -> .)
    {               shift and go to state 15
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    BREAK           shift and go to state 21
    CONTINUE        shift and go to state 22
    RETURN          shift and go to state 23
    ID              shift and go to state 20

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    block                          shift and go to state 5
    if                             shift and go to state 6
    print                          shift and go to state 7
    while                          shift and go to state 8
    for                            shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    return                         shift and go to state 12
    assign                         shift and go to state 13
    assign_in_array                shift and go to state 14

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID PLUSASSIGN assignment ;
    (32) assign -> . ID MINUSASSIGN assignment ;
    (33) assign -> . ID TIMESASSIGN assignment ;
    (34) assign -> . ID DIVIDEASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range PLUSASSIGN assignment ;
    (38) assign_in_array -> . ID array_range MINUSASSIGN assignment ;
    (39) assign_in_array -> . ID array_range TIMESASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVIDEASSIGN assignment ;

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    {               shift and go to state 15
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    BREAK           shift and go to state 21
    CONTINUE        shift and go to state 22
    RETURN          shift and go to state 23
    ID              shift and go to state 20

    instruction                    shift and go to state 24
    block                          shift and go to state 5
    if                             shift and go to state 6
    print                          shift and go to state 7
    while                          shift and go to state 8
    for                            shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    return                         shift and go to state 12
    assign                         shift and go to state 13
    assign_in_array                shift and go to state 14

state 4

    (5) instructions -> instruction .

    {               reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    }               reduce using rule 5 (instructions -> instruction .)


state 5

    (6) instruction -> block .

    {               reduce using rule 6 (instruction -> block .)
    IF              reduce using rule 6 (instruction -> block .)
    PRINT           reduce using rule 6 (instruction -> block .)
    WHILE           reduce using rule 6 (instruction -> block .)
    FOR             reduce using rule 6 (instruction -> block .)
    BREAK           reduce using rule 6 (instruction -> block .)
    CONTINUE        reduce using rule 6 (instruction -> block .)
    RETURN          reduce using rule 6 (instruction -> block .)
    ID              reduce using rule 6 (instruction -> block .)
    $end            reduce using rule 6 (instruction -> block .)
    }               reduce using rule 6 (instruction -> block .)
    ELSE            reduce using rule 6 (instruction -> block .)


state 6

    (7) instruction -> if .

    {               reduce using rule 7 (instruction -> if .)
    IF              reduce using rule 7 (instruction -> if .)
    PRINT           reduce using rule 7 (instruction -> if .)
    WHILE           reduce using rule 7 (instruction -> if .)
    FOR             reduce using rule 7 (instruction -> if .)
    BREAK           reduce using rule 7 (instruction -> if .)
    CONTINUE        reduce using rule 7 (instruction -> if .)
    RETURN          reduce using rule 7 (instruction -> if .)
    ID              reduce using rule 7 (instruction -> if .)
    $end            reduce using rule 7 (instruction -> if .)
    }               reduce using rule 7 (instruction -> if .)
    ELSE            reduce using rule 7 (instruction -> if .)


state 7

    (8) instruction -> print .

    {               reduce using rule 8 (instruction -> print .)
    IF              reduce using rule 8 (instruction -> print .)
    PRINT           reduce using rule 8 (instruction -> print .)
    WHILE           reduce using rule 8 (instruction -> print .)
    FOR             reduce using rule 8 (instruction -> print .)
    BREAK           reduce using rule 8 (instruction -> print .)
    CONTINUE        reduce using rule 8 (instruction -> print .)
    RETURN          reduce using rule 8 (instruction -> print .)
    ID              reduce using rule 8 (instruction -> print .)
    $end            reduce using rule 8 (instruction -> print .)
    }               reduce using rule 8 (instruction -> print .)
    ELSE            reduce using rule 8 (instruction -> print .)


state 8

    (9) instruction -> while .

    {               reduce using rule 9 (instruction -> while .)
    IF              reduce using rule 9 (instruction -> while .)
    PRINT           reduce using rule 9 (instruction -> while .)
    WHILE           reduce using rule 9 (instruction -> while .)
    FOR             reduce using rule 9 (instruction -> while .)
    BREAK           reduce using rule 9 (instruction -> while .)
    CONTINUE        reduce using rule 9 (instruction -> while .)
    RETURN          reduce using rule 9 (instruction -> while .)
    ID              reduce using rule 9 (instruction -> while .)
    $end            reduce using rule 9 (instruction -> while .)
    }               reduce using rule 9 (instruction -> while .)
    ELSE            reduce using rule 9 (instruction -> while .)


state 9

    (10) instruction -> for .

    {               reduce using rule 10 (instruction -> for .)
    IF              reduce using rule 10 (instruction -> for .)
    PRINT           reduce using rule 10 (instruction -> for .)
    WHILE           reduce using rule 10 (instruction -> for .)
    FOR             reduce using rule 10 (instruction -> for .)
    BREAK           reduce using rule 10 (instruction -> for .)
    CONTINUE        reduce using rule 10 (instruction -> for .)
    RETURN          reduce using rule 10 (instruction -> for .)
    ID              reduce using rule 10 (instruction -> for .)
    $end            reduce using rule 10 (instruction -> for .)
    }               reduce using rule 10 (instruction -> for .)
    ELSE            reduce using rule 10 (instruction -> for .)


state 10

    (11) instruction -> break .

    {               reduce using rule 11 (instruction -> break .)
    IF              reduce using rule 11 (instruction -> break .)
    PRINT           reduce using rule 11 (instruction -> break .)
    WHILE           reduce using rule 11 (instruction -> break .)
    FOR             reduce using rule 11 (instruction -> break .)
    BREAK           reduce using rule 11 (instruction -> break .)
    CONTINUE        reduce using rule 11 (instruction -> break .)
    RETURN          reduce using rule 11 (instruction -> break .)
    ID              reduce using rule 11 (instruction -> break .)
    $end            reduce using rule 11 (instruction -> break .)
    }               reduce using rule 11 (instruction -> break .)
    ELSE            reduce using rule 11 (instruction -> break .)


state 11

    (12) instruction -> continue .

    {               reduce using rule 12 (instruction -> continue .)
    IF              reduce using rule 12 (instruction -> continue .)
    PRINT           reduce using rule 12 (instruction -> continue .)
    WHILE           reduce using rule 12 (instruction -> continue .)
    FOR             reduce using rule 12 (instruction -> continue .)
    BREAK           reduce using rule 12 (instruction -> continue .)
    CONTINUE        reduce using rule 12 (instruction -> continue .)
    RETURN          reduce using rule 12 (instruction -> continue .)
    ID              reduce using rule 12 (instruction -> continue .)
    $end            reduce using rule 12 (instruction -> continue .)
    }               reduce using rule 12 (instruction -> continue .)
    ELSE            reduce using rule 12 (instruction -> continue .)


state 12

    (13) instruction -> return .

    {               reduce using rule 13 (instruction -> return .)
    IF              reduce using rule 13 (instruction -> return .)
    PRINT           reduce using rule 13 (instruction -> return .)
    WHILE           reduce using rule 13 (instruction -> return .)
    FOR             reduce using rule 13 (instruction -> return .)
    BREAK           reduce using rule 13 (instruction -> return .)
    CONTINUE        reduce using rule 13 (instruction -> return .)
    RETURN          reduce using rule 13 (instruction -> return .)
    ID              reduce using rule 13 (instruction -> return .)
    $end            reduce using rule 13 (instruction -> return .)
    }               reduce using rule 13 (instruction -> return .)
    ELSE            reduce using rule 13 (instruction -> return .)


state 13

    (14) instruction -> assign .

    {               reduce using rule 14 (instruction -> assign .)
    IF              reduce using rule 14 (instruction -> assign .)
    PRINT           reduce using rule 14 (instruction -> assign .)
    WHILE           reduce using rule 14 (instruction -> assign .)
    FOR             reduce using rule 14 (instruction -> assign .)
    BREAK           reduce using rule 14 (instruction -> assign .)
    CONTINUE        reduce using rule 14 (instruction -> assign .)
    RETURN          reduce using rule 14 (instruction -> assign .)
    ID              reduce using rule 14 (instruction -> assign .)
    $end            reduce using rule 14 (instruction -> assign .)
    }               reduce using rule 14 (instruction -> assign .)
    ELSE            reduce using rule 14 (instruction -> assign .)


state 14

    (15) instruction -> assign_in_array .

    {               reduce using rule 15 (instruction -> assign_in_array .)
    IF              reduce using rule 15 (instruction -> assign_in_array .)
    PRINT           reduce using rule 15 (instruction -> assign_in_array .)
    WHILE           reduce using rule 15 (instruction -> assign_in_array .)
    FOR             reduce using rule 15 (instruction -> assign_in_array .)
    BREAK           reduce using rule 15 (instruction -> assign_in_array .)
    CONTINUE        reduce using rule 15 (instruction -> assign_in_array .)
    RETURN          reduce using rule 15 (instruction -> assign_in_array .)
    ID              reduce using rule 15 (instruction -> assign_in_array .)
    $end            reduce using rule 15 (instruction -> assign_in_array .)
    }               reduce using rule 15 (instruction -> assign_in_array .)
    ELSE            reduce using rule 15 (instruction -> assign_in_array .)


state 15

    (16) block -> { . instructions }
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID PLUSASSIGN assignment ;
    (32) assign -> . ID MINUSASSIGN assignment ;
    (33) assign -> . ID TIMESASSIGN assignment ;
    (34) assign -> . ID DIVIDEASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range PLUSASSIGN assignment ;
    (38) assign_in_array -> . ID array_range MINUSASSIGN assignment ;
    (39) assign_in_array -> . ID array_range TIMESASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVIDEASSIGN assignment ;

    {               shift and go to state 15
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    BREAK           shift and go to state 21
    CONTINUE        shift and go to state 22
    RETURN          shift and go to state 23
    ID              shift and go to state 20

    instructions                   shift and go to state 25
    instruction                    shift and go to state 4
    block                          shift and go to state 5
    if                             shift and go to state 6
    print                          shift and go to state 7
    while                          shift and go to state 8
    for                            shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    return                         shift and go to state 12
    assign                         shift and go to state 13
    assign_in_array                shift and go to state 14

state 16

    (17) if -> IF . ( assignment ) instruction
    (18) if -> IF . ( assignment ) instruction ELSE instruction

    (               shift and go to state 26


state 17

    (19) print -> PRINT . arguments ;
    (20) arguments -> . assignment
    (21) arguments -> . assignment , arguments
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    ID              shift and go to state 40
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    arguments                      shift and go to state 27
    assignment                     shift and go to state 28
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 18

    (22) while -> WHILE . ( assignment ) instruction

    (               shift and go to state 43


state 19

    (23) for -> FOR . ID = range instruction

    ID              shift and go to state 44


state 20

    (29) assign -> ID . = assign
    (30) assign -> ID . = assignment ;
    (31) assign -> ID . PLUSASSIGN assignment ;
    (32) assign -> ID . MINUSASSIGN assignment ;
    (33) assign -> ID . TIMESASSIGN assignment ;
    (34) assign -> ID . DIVIDEASSIGN assignment ;
    (35) assign_in_array -> ID . array_range = assign
    (36) assign_in_array -> ID . array_range = assignment ;
    (37) assign_in_array -> ID . array_range PLUSASSIGN assignment ;
    (38) assign_in_array -> ID . array_range MINUSASSIGN assignment ;
    (39) assign_in_array -> ID . array_range TIMESASSIGN assignment ;
    (40) assign_in_array -> ID . array_range DIVIDEASSIGN assignment ;
    (41) array_range -> . [ INTNUM , INTNUM ]
    (42) array_range -> . [ INTNUM ]

    =               shift and go to state 45
    PLUSASSIGN      shift and go to state 46
    MINUSASSIGN     shift and go to state 47
    TIMESASSIGN     shift and go to state 48
    DIVIDEASSIGN    shift and go to state 49
    [               shift and go to state 51

    array_range                    shift and go to state 50

state 21

    (25) break -> BREAK . ;

    ;               shift and go to state 52


state 22

    (26) continue -> CONTINUE . ;

    ;               shift and go to state 53


state 23

    (27) return -> RETURN . ;
    (28) return -> RETURN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ;               shift and go to state 54
    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    ID              shift and go to state 40
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assignment                     shift and go to state 55
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 24

    (4) instructions -> instructions instruction .

    {               reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    }               reduce using rule 4 (instructions -> instructions instruction .)


state 25

    (16) block -> { instructions . }
    (4) instructions -> instructions . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID PLUSASSIGN assignment ;
    (32) assign -> . ID MINUSASSIGN assignment ;
    (33) assign -> . ID TIMESASSIGN assignment ;
    (34) assign -> . ID DIVIDEASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range PLUSASSIGN assignment ;
    (38) assign_in_array -> . ID array_range MINUSASSIGN assignment ;
    (39) assign_in_array -> . ID array_range TIMESASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVIDEASSIGN assignment ;

    }               shift and go to state 56
    {               shift and go to state 15
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    BREAK           shift and go to state 21
    CONTINUE        shift and go to state 22
    RETURN          shift and go to state 23
    ID              shift and go to state 20

    instruction                    shift and go to state 24
    block                          shift and go to state 5
    if                             shift and go to state 6
    print                          shift and go to state 7
    while                          shift and go to state 8
    for                            shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    return                         shift and go to state 12
    assign                         shift and go to state 13
    assign_in_array                shift and go to state 14

state 26

    (17) if -> IF ( . assignment ) instruction
    (18) if -> IF ( . assignment ) instruction ELSE instruction
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    ID              shift and go to state 40
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assignment                     shift and go to state 57
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 27

    (19) print -> PRINT arguments . ;

    ;               shift and go to state 58


state 28

    (20) arguments -> assignment .
    (21) arguments -> assignment . , arguments

    ;               reduce using rule 20 (arguments -> assignment .)
    ,               shift and go to state 59


state 29

    (43) assignment -> STRING .

    ,               reduce using rule 43 (assignment -> STRING .)
    ;               reduce using rule 43 (assignment -> STRING .)
    )               reduce using rule 43 (assignment -> STRING .)


state 30

    (44) assignment -> matrix_special_features .

    ,               reduce using rule 44 (assignment -> matrix_special_features .)
    ;               reduce using rule 44 (assignment -> matrix_special_features .)
    )               reduce using rule 44 (assignment -> matrix_special_features .)


state 31

    (45) assignment -> relational_expression .

    ,               reduce using rule 45 (assignment -> relational_expression .)
    ;               reduce using rule 45 (assignment -> relational_expression .)
    )               reduce using rule 45 (assignment -> relational_expression .)


state 32

    (46) assignment -> expression .
    (56) relational_expression -> expression . < expression
    (57) relational_expression -> expression . > expression
    (58) relational_expression -> expression . LESSEQUAL expression
    (59) relational_expression -> expression . GREATEREQUAL expression
    (60) relational_expression -> expression . EQUAL expression
    (61) relational_expression -> expression . NOTEQUAL expression
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    ,               reduce using rule 46 (assignment -> expression .)
    ;               reduce using rule 46 (assignment -> expression .)
    )               reduce using rule 46 (assignment -> expression .)
    <               shift and go to state 60
    >               shift and go to state 61
    LESSEQUAL       shift and go to state 62
    GREATEREQUAL    shift and go to state 63
    EQUAL           shift and go to state 64
    NOTEQUAL        shift and go to state 65
    +               shift and go to state 66
    -               shift and go to state 67
    *               shift and go to state 68
    /               shift and go to state 69
    DOTPLUS         shift and go to state 70
    DOTMINUS        shift and go to state 71
    DOTTIMES        shift and go to state 72
    DOTDIVIDE       shift and go to state 73


state 33

    (47) assignment -> array .

    ,               reduce using rule 47 (assignment -> array .)
    ;               reduce using rule 47 (assignment -> array .)
    )               reduce using rule 47 (assignment -> array .)


state 34

    (74) matrix_special_features -> EYE . ( INTNUM )

    (               shift and go to state 74


state 35

    (77) number -> INTNUM .

    <               reduce using rule 77 (number -> INTNUM .)
    >               reduce using rule 77 (number -> INTNUM .)
    LESSEQUAL       reduce using rule 77 (number -> INTNUM .)
    GREATEREQUAL    reduce using rule 77 (number -> INTNUM .)
    EQUAL           reduce using rule 77 (number -> INTNUM .)
    NOTEQUAL        reduce using rule 77 (number -> INTNUM .)
    +               reduce using rule 77 (number -> INTNUM .)
    -               reduce using rule 77 (number -> INTNUM .)
    *               reduce using rule 77 (number -> INTNUM .)
    /               reduce using rule 77 (number -> INTNUM .)
    DOTPLUS         reduce using rule 77 (number -> INTNUM .)
    DOTMINUS        reduce using rule 77 (number -> INTNUM .)
    DOTTIMES        reduce using rule 77 (number -> INTNUM .)
    DOTDIVIDE       reduce using rule 77 (number -> INTNUM .)
    ,               reduce using rule 77 (number -> INTNUM .)
    ;               reduce using rule 77 (number -> INTNUM .)
    )               reduce using rule 77 (number -> INTNUM .)
    :               reduce using rule 77 (number -> INTNUM .)
    {               reduce using rule 77 (number -> INTNUM .)
    IF              reduce using rule 77 (number -> INTNUM .)
    PRINT           reduce using rule 77 (number -> INTNUM .)
    WHILE           reduce using rule 77 (number -> INTNUM .)
    FOR             reduce using rule 77 (number -> INTNUM .)
    BREAK           reduce using rule 77 (number -> INTNUM .)
    CONTINUE        reduce using rule 77 (number -> INTNUM .)
    RETURN          reduce using rule 77 (number -> INTNUM .)
    ID              reduce using rule 77 (number -> INTNUM .)
    ]               reduce using rule 77 (number -> INTNUM .)


state 36

    (75) matrix_special_features -> ZEROS . ( INTNUM )

    (               shift and go to state 75


state 37

    (76) matrix_special_features -> ONES . ( INTNUM )

    (               shift and go to state 76


state 38

    (73) expression -> - . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 77
    number                         shift and go to state 39

state 39

    (70) expression -> number .

    <               reduce using rule 70 (expression -> number .)
    >               reduce using rule 70 (expression -> number .)
    LESSEQUAL       reduce using rule 70 (expression -> number .)
    GREATEREQUAL    reduce using rule 70 (expression -> number .)
    EQUAL           reduce using rule 70 (expression -> number .)
    NOTEQUAL        reduce using rule 70 (expression -> number .)
    +               reduce using rule 70 (expression -> number .)
    -               reduce using rule 70 (expression -> number .)
    *               reduce using rule 70 (expression -> number .)
    /               reduce using rule 70 (expression -> number .)
    DOTPLUS         reduce using rule 70 (expression -> number .)
    DOTMINUS        reduce using rule 70 (expression -> number .)
    DOTTIMES        reduce using rule 70 (expression -> number .)
    DOTDIVIDE       reduce using rule 70 (expression -> number .)
    ,               reduce using rule 70 (expression -> number .)
    ;               reduce using rule 70 (expression -> number .)
    )               reduce using rule 70 (expression -> number .)
    :               reduce using rule 70 (expression -> number .)
    {               reduce using rule 70 (expression -> number .)
    IF              reduce using rule 70 (expression -> number .)
    PRINT           reduce using rule 70 (expression -> number .)
    WHILE           reduce using rule 70 (expression -> number .)
    FOR             reduce using rule 70 (expression -> number .)
    BREAK           reduce using rule 70 (expression -> number .)
    CONTINUE        reduce using rule 70 (expression -> number .)
    RETURN          reduce using rule 70 (expression -> number .)
    ID              reduce using rule 70 (expression -> number .)


state 40

    (71) expression -> ID .
    (72) expression -> ID . TRANSPOSE

    <               reduce using rule 71 (expression -> ID .)
    >               reduce using rule 71 (expression -> ID .)
    LESSEQUAL       reduce using rule 71 (expression -> ID .)
    GREATEREQUAL    reduce using rule 71 (expression -> ID .)
    EQUAL           reduce using rule 71 (expression -> ID .)
    NOTEQUAL        reduce using rule 71 (expression -> ID .)
    +               reduce using rule 71 (expression -> ID .)
    -               reduce using rule 71 (expression -> ID .)
    *               reduce using rule 71 (expression -> ID .)
    /               reduce using rule 71 (expression -> ID .)
    DOTPLUS         reduce using rule 71 (expression -> ID .)
    DOTMINUS        reduce using rule 71 (expression -> ID .)
    DOTTIMES        reduce using rule 71 (expression -> ID .)
    DOTDIVIDE       reduce using rule 71 (expression -> ID .)
    ,               reduce using rule 71 (expression -> ID .)
    ;               reduce using rule 71 (expression -> ID .)
    )               reduce using rule 71 (expression -> ID .)
    :               reduce using rule 71 (expression -> ID .)
    {               reduce using rule 71 (expression -> ID .)
    IF              reduce using rule 71 (expression -> ID .)
    PRINT           reduce using rule 71 (expression -> ID .)
    WHILE           reduce using rule 71 (expression -> ID .)
    FOR             reduce using rule 71 (expression -> ID .)
    BREAK           reduce using rule 71 (expression -> ID .)
    CONTINUE        reduce using rule 71 (expression -> ID .)
    RETURN          reduce using rule 71 (expression -> ID .)
    ID              reduce using rule 71 (expression -> ID .)
    TRANSPOSE       shift and go to state 78


state 41

    (48) array -> [ . ]
    (49) array -> [ . dimensions ]
    (50) dimensions -> . values
    (51) dimensions -> . values ; dimensions
    (52) values -> . value
    (53) values -> . value , values
    (54) value -> . STRING
    (55) value -> . number
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ]               shift and go to state 79
    STRING          shift and go to state 83
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    dimensions                     shift and go to state 80
    values                         shift and go to state 81
    value                          shift and go to state 82
    number                         shift and go to state 84

state 42

    (78) number -> FLOATNUM .

    <               reduce using rule 78 (number -> FLOATNUM .)
    >               reduce using rule 78 (number -> FLOATNUM .)
    LESSEQUAL       reduce using rule 78 (number -> FLOATNUM .)
    GREATEREQUAL    reduce using rule 78 (number -> FLOATNUM .)
    EQUAL           reduce using rule 78 (number -> FLOATNUM .)
    NOTEQUAL        reduce using rule 78 (number -> FLOATNUM .)
    +               reduce using rule 78 (number -> FLOATNUM .)
    -               reduce using rule 78 (number -> FLOATNUM .)
    *               reduce using rule 78 (number -> FLOATNUM .)
    /               reduce using rule 78 (number -> FLOATNUM .)
    DOTPLUS         reduce using rule 78 (number -> FLOATNUM .)
    DOTMINUS        reduce using rule 78 (number -> FLOATNUM .)
    DOTTIMES        reduce using rule 78 (number -> FLOATNUM .)
    DOTDIVIDE       reduce using rule 78 (number -> FLOATNUM .)
    ,               reduce using rule 78 (number -> FLOATNUM .)
    ;               reduce using rule 78 (number -> FLOATNUM .)
    )               reduce using rule 78 (number -> FLOATNUM .)
    :               reduce using rule 78 (number -> FLOATNUM .)
    {               reduce using rule 78 (number -> FLOATNUM .)
    IF              reduce using rule 78 (number -> FLOATNUM .)
    PRINT           reduce using rule 78 (number -> FLOATNUM .)
    WHILE           reduce using rule 78 (number -> FLOATNUM .)
    FOR             reduce using rule 78 (number -> FLOATNUM .)
    BREAK           reduce using rule 78 (number -> FLOATNUM .)
    CONTINUE        reduce using rule 78 (number -> FLOATNUM .)
    RETURN          reduce using rule 78 (number -> FLOATNUM .)
    ID              reduce using rule 78 (number -> FLOATNUM .)
    ]               reduce using rule 78 (number -> FLOATNUM .)


state 43

    (22) while -> WHILE ( . assignment ) instruction
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    ID              shift and go to state 40
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assignment                     shift and go to state 85
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 44

    (23) for -> FOR ID . = range instruction

    =               shift and go to state 86


state 45

    (29) assign -> ID = . assign
    (30) assign -> ID = . assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID PLUSASSIGN assignment ;
    (32) assign -> . ID MINUSASSIGN assignment ;
    (33) assign -> . ID TIMESASSIGN assignment ;
    (34) assign -> . ID DIVIDEASSIGN assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 87
    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assign                         shift and go to state 88
    assignment                     shift and go to state 89
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 46

    (31) assign -> ID PLUSASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    ID              shift and go to state 40
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assignment                     shift and go to state 90
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 47

    (32) assign -> ID MINUSASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    ID              shift and go to state 40
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assignment                     shift and go to state 91
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 48

    (33) assign -> ID TIMESASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    ID              shift and go to state 40
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assignment                     shift and go to state 92
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 49

    (34) assign -> ID DIVIDEASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    ID              shift and go to state 40
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assignment                     shift and go to state 93
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 50

    (35) assign_in_array -> ID array_range . = assign
    (36) assign_in_array -> ID array_range . = assignment ;
    (37) assign_in_array -> ID array_range . PLUSASSIGN assignment ;
    (38) assign_in_array -> ID array_range . MINUSASSIGN assignment ;
    (39) assign_in_array -> ID array_range . TIMESASSIGN assignment ;
    (40) assign_in_array -> ID array_range . DIVIDEASSIGN assignment ;

    =               shift and go to state 94
    PLUSASSIGN      shift and go to state 95
    MINUSASSIGN     shift and go to state 96
    TIMESASSIGN     shift and go to state 97
    DIVIDEASSIGN    shift and go to state 98


state 51

    (41) array_range -> [ . INTNUM , INTNUM ]
    (42) array_range -> [ . INTNUM ]

    INTNUM          shift and go to state 99


state 52

    (25) break -> BREAK ; .

    {               reduce using rule 25 (break -> BREAK ; .)
    IF              reduce using rule 25 (break -> BREAK ; .)
    PRINT           reduce using rule 25 (break -> BREAK ; .)
    WHILE           reduce using rule 25 (break -> BREAK ; .)
    FOR             reduce using rule 25 (break -> BREAK ; .)
    BREAK           reduce using rule 25 (break -> BREAK ; .)
    CONTINUE        reduce using rule 25 (break -> BREAK ; .)
    RETURN          reduce using rule 25 (break -> BREAK ; .)
    ID              reduce using rule 25 (break -> BREAK ; .)
    $end            reduce using rule 25 (break -> BREAK ; .)
    }               reduce using rule 25 (break -> BREAK ; .)
    ELSE            reduce using rule 25 (break -> BREAK ; .)


state 53

    (26) continue -> CONTINUE ; .

    {               reduce using rule 26 (continue -> CONTINUE ; .)
    IF              reduce using rule 26 (continue -> CONTINUE ; .)
    PRINT           reduce using rule 26 (continue -> CONTINUE ; .)
    WHILE           reduce using rule 26 (continue -> CONTINUE ; .)
    FOR             reduce using rule 26 (continue -> CONTINUE ; .)
    BREAK           reduce using rule 26 (continue -> CONTINUE ; .)
    CONTINUE        reduce using rule 26 (continue -> CONTINUE ; .)
    RETURN          reduce using rule 26 (continue -> CONTINUE ; .)
    ID              reduce using rule 26 (continue -> CONTINUE ; .)
    $end            reduce using rule 26 (continue -> CONTINUE ; .)
    }               reduce using rule 26 (continue -> CONTINUE ; .)
    ELSE            reduce using rule 26 (continue -> CONTINUE ; .)


state 54

    (27) return -> RETURN ; .

    {               reduce using rule 27 (return -> RETURN ; .)
    IF              reduce using rule 27 (return -> RETURN ; .)
    PRINT           reduce using rule 27 (return -> RETURN ; .)
    WHILE           reduce using rule 27 (return -> RETURN ; .)
    FOR             reduce using rule 27 (return -> RETURN ; .)
    BREAK           reduce using rule 27 (return -> RETURN ; .)
    CONTINUE        reduce using rule 27 (return -> RETURN ; .)
    RETURN          reduce using rule 27 (return -> RETURN ; .)
    ID              reduce using rule 27 (return -> RETURN ; .)
    $end            reduce using rule 27 (return -> RETURN ; .)
    }               reduce using rule 27 (return -> RETURN ; .)
    ELSE            reduce using rule 27 (return -> RETURN ; .)


state 55

    (28) return -> RETURN assignment . ;

    ;               shift and go to state 100


state 56

    (16) block -> { instructions } .

    {               reduce using rule 16 (block -> { instructions } .)
    IF              reduce using rule 16 (block -> { instructions } .)
    PRINT           reduce using rule 16 (block -> { instructions } .)
    WHILE           reduce using rule 16 (block -> { instructions } .)
    FOR             reduce using rule 16 (block -> { instructions } .)
    BREAK           reduce using rule 16 (block -> { instructions } .)
    CONTINUE        reduce using rule 16 (block -> { instructions } .)
    RETURN          reduce using rule 16 (block -> { instructions } .)
    ID              reduce using rule 16 (block -> { instructions } .)
    $end            reduce using rule 16 (block -> { instructions } .)
    }               reduce using rule 16 (block -> { instructions } .)
    ELSE            reduce using rule 16 (block -> { instructions } .)


state 57

    (17) if -> IF ( assignment . ) instruction
    (18) if -> IF ( assignment . ) instruction ELSE instruction

    )               shift and go to state 101


state 58

    (19) print -> PRINT arguments ; .

    {               reduce using rule 19 (print -> PRINT arguments ; .)
    IF              reduce using rule 19 (print -> PRINT arguments ; .)
    PRINT           reduce using rule 19 (print -> PRINT arguments ; .)
    WHILE           reduce using rule 19 (print -> PRINT arguments ; .)
    FOR             reduce using rule 19 (print -> PRINT arguments ; .)
    BREAK           reduce using rule 19 (print -> PRINT arguments ; .)
    CONTINUE        reduce using rule 19 (print -> PRINT arguments ; .)
    RETURN          reduce using rule 19 (print -> PRINT arguments ; .)
    ID              reduce using rule 19 (print -> PRINT arguments ; .)
    $end            reduce using rule 19 (print -> PRINT arguments ; .)
    }               reduce using rule 19 (print -> PRINT arguments ; .)
    ELSE            reduce using rule 19 (print -> PRINT arguments ; .)


state 59

    (21) arguments -> assignment , . arguments
    (20) arguments -> . assignment
    (21) arguments -> . assignment , arguments
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    ID              shift and go to state 40
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assignment                     shift and go to state 28
    arguments                      shift and go to state 102
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 60

    (56) relational_expression -> expression < . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 103
    number                         shift and go to state 39

state 61

    (57) relational_expression -> expression > . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 104
    number                         shift and go to state 39

state 62

    (58) relational_expression -> expression LESSEQUAL . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 105
    number                         shift and go to state 39

state 63

    (59) relational_expression -> expression GREATEREQUAL . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 106
    number                         shift and go to state 39

state 64

    (60) relational_expression -> expression EQUAL . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 107
    number                         shift and go to state 39

state 65

    (61) relational_expression -> expression NOTEQUAL . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 108
    number                         shift and go to state 39

state 66

    (62) expression -> expression + . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 109
    number                         shift and go to state 39

state 67

    (63) expression -> expression - . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 110
    number                         shift and go to state 39

state 68

    (64) expression -> expression * . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 111
    number                         shift and go to state 39

state 69

    (65) expression -> expression / . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 112
    number                         shift and go to state 39

state 70

    (66) expression -> expression DOTPLUS . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 113
    number                         shift and go to state 39

state 71

    (67) expression -> expression DOTMINUS . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 114
    number                         shift and go to state 39

state 72

    (68) expression -> expression DOTTIMES . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 115
    number                         shift and go to state 39

state 73

    (69) expression -> expression DOTDIVIDE . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 116
    number                         shift and go to state 39

state 74

    (74) matrix_special_features -> EYE ( . INTNUM )

    INTNUM          shift and go to state 117


state 75

    (75) matrix_special_features -> ZEROS ( . INTNUM )

    INTNUM          shift and go to state 118


state 76

    (76) matrix_special_features -> ONES ( . INTNUM )

    INTNUM          shift and go to state 119


state 77

    (73) expression -> - expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    <               reduce using rule 73 (expression -> - expression .)
    >               reduce using rule 73 (expression -> - expression .)
    LESSEQUAL       reduce using rule 73 (expression -> - expression .)
    GREATEREQUAL    reduce using rule 73 (expression -> - expression .)
    EQUAL           reduce using rule 73 (expression -> - expression .)
    NOTEQUAL        reduce using rule 73 (expression -> - expression .)
    +               reduce using rule 73 (expression -> - expression .)
    -               reduce using rule 73 (expression -> - expression .)
    *               reduce using rule 73 (expression -> - expression .)
    /               reduce using rule 73 (expression -> - expression .)
    DOTPLUS         reduce using rule 73 (expression -> - expression .)
    DOTMINUS        reduce using rule 73 (expression -> - expression .)
    DOTTIMES        reduce using rule 73 (expression -> - expression .)
    DOTDIVIDE       reduce using rule 73 (expression -> - expression .)
    ,               reduce using rule 73 (expression -> - expression .)
    ;               reduce using rule 73 (expression -> - expression .)
    )               reduce using rule 73 (expression -> - expression .)
    :               reduce using rule 73 (expression -> - expression .)
    {               reduce using rule 73 (expression -> - expression .)
    IF              reduce using rule 73 (expression -> - expression .)
    PRINT           reduce using rule 73 (expression -> - expression .)
    WHILE           reduce using rule 73 (expression -> - expression .)
    FOR             reduce using rule 73 (expression -> - expression .)
    BREAK           reduce using rule 73 (expression -> - expression .)
    CONTINUE        reduce using rule 73 (expression -> - expression .)
    RETURN          reduce using rule 73 (expression -> - expression .)
    ID              reduce using rule 73 (expression -> - expression .)

  ! +               [ shift and go to state 66 ]
  ! -               [ shift and go to state 67 ]
  ! *               [ shift and go to state 68 ]
  ! /               [ shift and go to state 69 ]
  ! DOTPLUS         [ shift and go to state 70 ]
  ! DOTMINUS        [ shift and go to state 71 ]
  ! DOTTIMES        [ shift and go to state 72 ]
  ! DOTDIVIDE       [ shift and go to state 73 ]


state 78

    (72) expression -> ID TRANSPOSE .

    <               reduce using rule 72 (expression -> ID TRANSPOSE .)
    >               reduce using rule 72 (expression -> ID TRANSPOSE .)
    LESSEQUAL       reduce using rule 72 (expression -> ID TRANSPOSE .)
    GREATEREQUAL    reduce using rule 72 (expression -> ID TRANSPOSE .)
    EQUAL           reduce using rule 72 (expression -> ID TRANSPOSE .)
    NOTEQUAL        reduce using rule 72 (expression -> ID TRANSPOSE .)
    +               reduce using rule 72 (expression -> ID TRANSPOSE .)
    -               reduce using rule 72 (expression -> ID TRANSPOSE .)
    *               reduce using rule 72 (expression -> ID TRANSPOSE .)
    /               reduce using rule 72 (expression -> ID TRANSPOSE .)
    DOTPLUS         reduce using rule 72 (expression -> ID TRANSPOSE .)
    DOTMINUS        reduce using rule 72 (expression -> ID TRANSPOSE .)
    DOTTIMES        reduce using rule 72 (expression -> ID TRANSPOSE .)
    DOTDIVIDE       reduce using rule 72 (expression -> ID TRANSPOSE .)
    ,               reduce using rule 72 (expression -> ID TRANSPOSE .)
    ;               reduce using rule 72 (expression -> ID TRANSPOSE .)
    )               reduce using rule 72 (expression -> ID TRANSPOSE .)
    :               reduce using rule 72 (expression -> ID TRANSPOSE .)
    {               reduce using rule 72 (expression -> ID TRANSPOSE .)
    IF              reduce using rule 72 (expression -> ID TRANSPOSE .)
    PRINT           reduce using rule 72 (expression -> ID TRANSPOSE .)
    WHILE           reduce using rule 72 (expression -> ID TRANSPOSE .)
    FOR             reduce using rule 72 (expression -> ID TRANSPOSE .)
    BREAK           reduce using rule 72 (expression -> ID TRANSPOSE .)
    CONTINUE        reduce using rule 72 (expression -> ID TRANSPOSE .)
    RETURN          reduce using rule 72 (expression -> ID TRANSPOSE .)
    ID              reduce using rule 72 (expression -> ID TRANSPOSE .)


state 79

    (48) array -> [ ] .

    ,               reduce using rule 48 (array -> [ ] .)
    ;               reduce using rule 48 (array -> [ ] .)
    )               reduce using rule 48 (array -> [ ] .)


state 80

    (49) array -> [ dimensions . ]

    ]               shift and go to state 120


state 81

    (50) dimensions -> values .
    (51) dimensions -> values . ; dimensions

    ]               reduce using rule 50 (dimensions -> values .)
    ;               shift and go to state 121


state 82

    (52) values -> value .
    (53) values -> value . , values

    ;               reduce using rule 52 (values -> value .)
    ]               reduce using rule 52 (values -> value .)
    ,               shift and go to state 122


state 83

    (54) value -> STRING .

    ,               reduce using rule 54 (value -> STRING .)
    ;               reduce using rule 54 (value -> STRING .)
    ]               reduce using rule 54 (value -> STRING .)


state 84

    (55) value -> number .

    ,               reduce using rule 55 (value -> number .)
    ;               reduce using rule 55 (value -> number .)
    ]               reduce using rule 55 (value -> number .)


state 85

    (22) while -> WHILE ( assignment . ) instruction

    )               shift and go to state 123


state 86

    (23) for -> FOR ID = . range instruction
    (24) range -> . expression : expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    range                          shift and go to state 124
    expression                     shift and go to state 125
    number                         shift and go to state 39

state 87

    (29) assign -> ID . = assign
    (30) assign -> ID . = assignment ;
    (31) assign -> ID . PLUSASSIGN assignment ;
    (32) assign -> ID . MINUSASSIGN assignment ;
    (33) assign -> ID . TIMESASSIGN assignment ;
    (34) assign -> ID . DIVIDEASSIGN assignment ;
    (71) expression -> ID .
    (72) expression -> ID . TRANSPOSE

    =               shift and go to state 45
    PLUSASSIGN      shift and go to state 46
    MINUSASSIGN     shift and go to state 47
    TIMESASSIGN     shift and go to state 48
    DIVIDEASSIGN    shift and go to state 49
    <               reduce using rule 71 (expression -> ID .)
    >               reduce using rule 71 (expression -> ID .)
    LESSEQUAL       reduce using rule 71 (expression -> ID .)
    GREATEREQUAL    reduce using rule 71 (expression -> ID .)
    EQUAL           reduce using rule 71 (expression -> ID .)
    NOTEQUAL        reduce using rule 71 (expression -> ID .)
    +               reduce using rule 71 (expression -> ID .)
    -               reduce using rule 71 (expression -> ID .)
    *               reduce using rule 71 (expression -> ID .)
    /               reduce using rule 71 (expression -> ID .)
    DOTPLUS         reduce using rule 71 (expression -> ID .)
    DOTMINUS        reduce using rule 71 (expression -> ID .)
    DOTTIMES        reduce using rule 71 (expression -> ID .)
    DOTDIVIDE       reduce using rule 71 (expression -> ID .)
    ;               reduce using rule 71 (expression -> ID .)
    TRANSPOSE       shift and go to state 78


state 88

    (29) assign -> ID = assign .

    {               reduce using rule 29 (assign -> ID = assign .)
    IF              reduce using rule 29 (assign -> ID = assign .)
    PRINT           reduce using rule 29 (assign -> ID = assign .)
    WHILE           reduce using rule 29 (assign -> ID = assign .)
    FOR             reduce using rule 29 (assign -> ID = assign .)
    BREAK           reduce using rule 29 (assign -> ID = assign .)
    CONTINUE        reduce using rule 29 (assign -> ID = assign .)
    RETURN          reduce using rule 29 (assign -> ID = assign .)
    ID              reduce using rule 29 (assign -> ID = assign .)
    $end            reduce using rule 29 (assign -> ID = assign .)
    }               reduce using rule 29 (assign -> ID = assign .)
    ELSE            reduce using rule 29 (assign -> ID = assign .)


state 89

    (30) assign -> ID = assignment . ;

    ;               shift and go to state 126


state 90

    (31) assign -> ID PLUSASSIGN assignment . ;

    ;               shift and go to state 127


state 91

    (32) assign -> ID MINUSASSIGN assignment . ;

    ;               shift and go to state 128


state 92

    (33) assign -> ID TIMESASSIGN assignment . ;

    ;               shift and go to state 129


state 93

    (34) assign -> ID DIVIDEASSIGN assignment . ;

    ;               shift and go to state 130


state 94

    (35) assign_in_array -> ID array_range = . assign
    (36) assign_in_array -> ID array_range = . assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID PLUSASSIGN assignment ;
    (32) assign -> . ID MINUSASSIGN assignment ;
    (33) assign -> . ID TIMESASSIGN assignment ;
    (34) assign -> . ID DIVIDEASSIGN assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 87
    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assign                         shift and go to state 131
    assignment                     shift and go to state 132
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 95

    (37) assign_in_array -> ID array_range PLUSASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    ID              shift and go to state 40
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assignment                     shift and go to state 133
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 96

    (38) assign_in_array -> ID array_range MINUSASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    ID              shift and go to state 40
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assignment                     shift and go to state 134
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 97

    (39) assign_in_array -> ID array_range TIMESASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    ID              shift and go to state 40
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assignment                     shift and go to state 135
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 98

    (40) assign_in_array -> ID array_range DIVIDEASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_special_features
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_special_features -> . EYE ( INTNUM )
    (75) matrix_special_features -> . ZEROS ( INTNUM )
    (76) matrix_special_features -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression GREATEREQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 29
    EYE             shift and go to state 34
    ZEROS           shift and go to state 36
    ONES            shift and go to state 37
    ID              shift and go to state 40
    -               shift and go to state 38
    [               shift and go to state 41
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    assignment                     shift and go to state 136
    matrix_special_features        shift and go to state 30
    relational_expression          shift and go to state 31
    expression                     shift and go to state 32
    array                          shift and go to state 33
    number                         shift and go to state 39

state 99

    (41) array_range -> [ INTNUM . , INTNUM ]
    (42) array_range -> [ INTNUM . ]

    ,               shift and go to state 137
    ]               shift and go to state 138


state 100

    (28) return -> RETURN assignment ; .

    {               reduce using rule 28 (return -> RETURN assignment ; .)
    IF              reduce using rule 28 (return -> RETURN assignment ; .)
    PRINT           reduce using rule 28 (return -> RETURN assignment ; .)
    WHILE           reduce using rule 28 (return -> RETURN assignment ; .)
    FOR             reduce using rule 28 (return -> RETURN assignment ; .)
    BREAK           reduce using rule 28 (return -> RETURN assignment ; .)
    CONTINUE        reduce using rule 28 (return -> RETURN assignment ; .)
    RETURN          reduce using rule 28 (return -> RETURN assignment ; .)
    ID              reduce using rule 28 (return -> RETURN assignment ; .)
    $end            reduce using rule 28 (return -> RETURN assignment ; .)
    }               reduce using rule 28 (return -> RETURN assignment ; .)
    ELSE            reduce using rule 28 (return -> RETURN assignment ; .)


state 101

    (17) if -> IF ( assignment ) . instruction
    (18) if -> IF ( assignment ) . instruction ELSE instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID PLUSASSIGN assignment ;
    (32) assign -> . ID MINUSASSIGN assignment ;
    (33) assign -> . ID TIMESASSIGN assignment ;
    (34) assign -> . ID DIVIDEASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range PLUSASSIGN assignment ;
    (38) assign_in_array -> . ID array_range MINUSASSIGN assignment ;
    (39) assign_in_array -> . ID array_range TIMESASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVIDEASSIGN assignment ;

    {               shift and go to state 15
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    BREAK           shift and go to state 21
    CONTINUE        shift and go to state 22
    RETURN          shift and go to state 23
    ID              shift and go to state 20

    instruction                    shift and go to state 139
    block                          shift and go to state 5
    if                             shift and go to state 6
    print                          shift and go to state 7
    while                          shift and go to state 8
    for                            shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    return                         shift and go to state 12
    assign                         shift and go to state 13
    assign_in_array                shift and go to state 14

state 102

    (21) arguments -> assignment , arguments .

    ;               reduce using rule 21 (arguments -> assignment , arguments .)


state 103

    (56) relational_expression -> expression < expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    ,               reduce using rule 56 (relational_expression -> expression < expression .)
    ;               reduce using rule 56 (relational_expression -> expression < expression .)
    )               reduce using rule 56 (relational_expression -> expression < expression .)
    +               shift and go to state 66
    -               shift and go to state 67
    *               shift and go to state 68
    /               shift and go to state 69
    DOTPLUS         shift and go to state 70
    DOTMINUS        shift and go to state 71
    DOTTIMES        shift and go to state 72
    DOTDIVIDE       shift and go to state 73


state 104

    (57) relational_expression -> expression > expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    ,               reduce using rule 57 (relational_expression -> expression > expression .)
    ;               reduce using rule 57 (relational_expression -> expression > expression .)
    )               reduce using rule 57 (relational_expression -> expression > expression .)
    +               shift and go to state 66
    -               shift and go to state 67
    *               shift and go to state 68
    /               shift and go to state 69
    DOTPLUS         shift and go to state 70
    DOTMINUS        shift and go to state 71
    DOTTIMES        shift and go to state 72
    DOTDIVIDE       shift and go to state 73


state 105

    (58) relational_expression -> expression LESSEQUAL expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    ,               reduce using rule 58 (relational_expression -> expression LESSEQUAL expression .)
    ;               reduce using rule 58 (relational_expression -> expression LESSEQUAL expression .)
    )               reduce using rule 58 (relational_expression -> expression LESSEQUAL expression .)
    +               shift and go to state 66
    -               shift and go to state 67
    *               shift and go to state 68
    /               shift and go to state 69
    DOTPLUS         shift and go to state 70
    DOTMINUS        shift and go to state 71
    DOTTIMES        shift and go to state 72
    DOTDIVIDE       shift and go to state 73


state 106

    (59) relational_expression -> expression GREATEREQUAL expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    ,               reduce using rule 59 (relational_expression -> expression GREATEREQUAL expression .)
    ;               reduce using rule 59 (relational_expression -> expression GREATEREQUAL expression .)
    )               reduce using rule 59 (relational_expression -> expression GREATEREQUAL expression .)
    +               shift and go to state 66
    -               shift and go to state 67
    *               shift and go to state 68
    /               shift and go to state 69
    DOTPLUS         shift and go to state 70
    DOTMINUS        shift and go to state 71
    DOTTIMES        shift and go to state 72
    DOTDIVIDE       shift and go to state 73


state 107

    (60) relational_expression -> expression EQUAL expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    ,               reduce using rule 60 (relational_expression -> expression EQUAL expression .)
    ;               reduce using rule 60 (relational_expression -> expression EQUAL expression .)
    )               reduce using rule 60 (relational_expression -> expression EQUAL expression .)
    +               shift and go to state 66
    -               shift and go to state 67
    *               shift and go to state 68
    /               shift and go to state 69
    DOTPLUS         shift and go to state 70
    DOTMINUS        shift and go to state 71
    DOTTIMES        shift and go to state 72
    DOTDIVIDE       shift and go to state 73


state 108

    (61) relational_expression -> expression NOTEQUAL expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    ,               reduce using rule 61 (relational_expression -> expression NOTEQUAL expression .)
    ;               reduce using rule 61 (relational_expression -> expression NOTEQUAL expression .)
    )               reduce using rule 61 (relational_expression -> expression NOTEQUAL expression .)
    +               shift and go to state 66
    -               shift and go to state 67
    *               shift and go to state 68
    /               shift and go to state 69
    DOTPLUS         shift and go to state 70
    DOTMINUS        shift and go to state 71
    DOTTIMES        shift and go to state 72
    DOTDIVIDE       shift and go to state 73


state 109

    (62) expression -> expression + expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    <               reduce using rule 62 (expression -> expression + expression .)
    >               reduce using rule 62 (expression -> expression + expression .)
    LESSEQUAL       reduce using rule 62 (expression -> expression + expression .)
    GREATEREQUAL    reduce using rule 62 (expression -> expression + expression .)
    EQUAL           reduce using rule 62 (expression -> expression + expression .)
    NOTEQUAL        reduce using rule 62 (expression -> expression + expression .)
    +               reduce using rule 62 (expression -> expression + expression .)
    -               reduce using rule 62 (expression -> expression + expression .)
    DOTPLUS         reduce using rule 62 (expression -> expression + expression .)
    DOTMINUS        reduce using rule 62 (expression -> expression + expression .)
    ,               reduce using rule 62 (expression -> expression + expression .)
    ;               reduce using rule 62 (expression -> expression + expression .)
    )               reduce using rule 62 (expression -> expression + expression .)
    :               reduce using rule 62 (expression -> expression + expression .)
    {               reduce using rule 62 (expression -> expression + expression .)
    IF              reduce using rule 62 (expression -> expression + expression .)
    PRINT           reduce using rule 62 (expression -> expression + expression .)
    WHILE           reduce using rule 62 (expression -> expression + expression .)
    FOR             reduce using rule 62 (expression -> expression + expression .)
    BREAK           reduce using rule 62 (expression -> expression + expression .)
    CONTINUE        reduce using rule 62 (expression -> expression + expression .)
    RETURN          reduce using rule 62 (expression -> expression + expression .)
    ID              reduce using rule 62 (expression -> expression + expression .)
    *               shift and go to state 68
    /               shift and go to state 69
    DOTTIMES        shift and go to state 72
    DOTDIVIDE       shift and go to state 73

  ! *               [ reduce using rule 62 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 62 (expression -> expression + expression .) ]
  ! DOTTIMES        [ reduce using rule 62 (expression -> expression + expression .) ]
  ! DOTDIVIDE       [ reduce using rule 62 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 66 ]
  ! -               [ shift and go to state 67 ]
  ! DOTPLUS         [ shift and go to state 70 ]
  ! DOTMINUS        [ shift and go to state 71 ]


state 110

    (63) expression -> expression - expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    <               reduce using rule 63 (expression -> expression - expression .)
    >               reduce using rule 63 (expression -> expression - expression .)
    LESSEQUAL       reduce using rule 63 (expression -> expression - expression .)
    GREATEREQUAL    reduce using rule 63 (expression -> expression - expression .)
    EQUAL           reduce using rule 63 (expression -> expression - expression .)
    NOTEQUAL        reduce using rule 63 (expression -> expression - expression .)
    +               reduce using rule 63 (expression -> expression - expression .)
    -               reduce using rule 63 (expression -> expression - expression .)
    DOTPLUS         reduce using rule 63 (expression -> expression - expression .)
    DOTMINUS        reduce using rule 63 (expression -> expression - expression .)
    ,               reduce using rule 63 (expression -> expression - expression .)
    ;               reduce using rule 63 (expression -> expression - expression .)
    )               reduce using rule 63 (expression -> expression - expression .)
    :               reduce using rule 63 (expression -> expression - expression .)
    {               reduce using rule 63 (expression -> expression - expression .)
    IF              reduce using rule 63 (expression -> expression - expression .)
    PRINT           reduce using rule 63 (expression -> expression - expression .)
    WHILE           reduce using rule 63 (expression -> expression - expression .)
    FOR             reduce using rule 63 (expression -> expression - expression .)
    BREAK           reduce using rule 63 (expression -> expression - expression .)
    CONTINUE        reduce using rule 63 (expression -> expression - expression .)
    RETURN          reduce using rule 63 (expression -> expression - expression .)
    ID              reduce using rule 63 (expression -> expression - expression .)
    *               shift and go to state 68
    /               shift and go to state 69
    DOTTIMES        shift and go to state 72
    DOTDIVIDE       shift and go to state 73

  ! *               [ reduce using rule 63 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 63 (expression -> expression - expression .) ]
  ! DOTTIMES        [ reduce using rule 63 (expression -> expression - expression .) ]
  ! DOTDIVIDE       [ reduce using rule 63 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 66 ]
  ! -               [ shift and go to state 67 ]
  ! DOTPLUS         [ shift and go to state 70 ]
  ! DOTMINUS        [ shift and go to state 71 ]


state 111

    (64) expression -> expression * expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    <               reduce using rule 64 (expression -> expression * expression .)
    >               reduce using rule 64 (expression -> expression * expression .)
    LESSEQUAL       reduce using rule 64 (expression -> expression * expression .)
    GREATEREQUAL    reduce using rule 64 (expression -> expression * expression .)
    EQUAL           reduce using rule 64 (expression -> expression * expression .)
    NOTEQUAL        reduce using rule 64 (expression -> expression * expression .)
    +               reduce using rule 64 (expression -> expression * expression .)
    -               reduce using rule 64 (expression -> expression * expression .)
    *               reduce using rule 64 (expression -> expression * expression .)
    /               reduce using rule 64 (expression -> expression * expression .)
    DOTPLUS         reduce using rule 64 (expression -> expression * expression .)
    DOTMINUS        reduce using rule 64 (expression -> expression * expression .)
    DOTTIMES        reduce using rule 64 (expression -> expression * expression .)
    DOTDIVIDE       reduce using rule 64 (expression -> expression * expression .)
    ,               reduce using rule 64 (expression -> expression * expression .)
    ;               reduce using rule 64 (expression -> expression * expression .)
    )               reduce using rule 64 (expression -> expression * expression .)
    :               reduce using rule 64 (expression -> expression * expression .)
    {               reduce using rule 64 (expression -> expression * expression .)
    IF              reduce using rule 64 (expression -> expression * expression .)
    PRINT           reduce using rule 64 (expression -> expression * expression .)
    WHILE           reduce using rule 64 (expression -> expression * expression .)
    FOR             reduce using rule 64 (expression -> expression * expression .)
    BREAK           reduce using rule 64 (expression -> expression * expression .)
    CONTINUE        reduce using rule 64 (expression -> expression * expression .)
    RETURN          reduce using rule 64 (expression -> expression * expression .)
    ID              reduce using rule 64 (expression -> expression * expression .)

  ! +               [ shift and go to state 66 ]
  ! -               [ shift and go to state 67 ]
  ! *               [ shift and go to state 68 ]
  ! /               [ shift and go to state 69 ]
  ! DOTPLUS         [ shift and go to state 70 ]
  ! DOTMINUS        [ shift and go to state 71 ]
  ! DOTTIMES        [ shift and go to state 72 ]
  ! DOTDIVIDE       [ shift and go to state 73 ]


state 112

    (65) expression -> expression / expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    <               reduce using rule 65 (expression -> expression / expression .)
    >               reduce using rule 65 (expression -> expression / expression .)
    LESSEQUAL       reduce using rule 65 (expression -> expression / expression .)
    GREATEREQUAL    reduce using rule 65 (expression -> expression / expression .)
    EQUAL           reduce using rule 65 (expression -> expression / expression .)
    NOTEQUAL        reduce using rule 65 (expression -> expression / expression .)
    +               reduce using rule 65 (expression -> expression / expression .)
    -               reduce using rule 65 (expression -> expression / expression .)
    *               reduce using rule 65 (expression -> expression / expression .)
    /               reduce using rule 65 (expression -> expression / expression .)
    DOTPLUS         reduce using rule 65 (expression -> expression / expression .)
    DOTMINUS        reduce using rule 65 (expression -> expression / expression .)
    DOTTIMES        reduce using rule 65 (expression -> expression / expression .)
    DOTDIVIDE       reduce using rule 65 (expression -> expression / expression .)
    ,               reduce using rule 65 (expression -> expression / expression .)
    ;               reduce using rule 65 (expression -> expression / expression .)
    )               reduce using rule 65 (expression -> expression / expression .)
    :               reduce using rule 65 (expression -> expression / expression .)
    {               reduce using rule 65 (expression -> expression / expression .)
    IF              reduce using rule 65 (expression -> expression / expression .)
    PRINT           reduce using rule 65 (expression -> expression / expression .)
    WHILE           reduce using rule 65 (expression -> expression / expression .)
    FOR             reduce using rule 65 (expression -> expression / expression .)
    BREAK           reduce using rule 65 (expression -> expression / expression .)
    CONTINUE        reduce using rule 65 (expression -> expression / expression .)
    RETURN          reduce using rule 65 (expression -> expression / expression .)
    ID              reduce using rule 65 (expression -> expression / expression .)

  ! +               [ shift and go to state 66 ]
  ! -               [ shift and go to state 67 ]
  ! *               [ shift and go to state 68 ]
  ! /               [ shift and go to state 69 ]
  ! DOTPLUS         [ shift and go to state 70 ]
  ! DOTMINUS        [ shift and go to state 71 ]
  ! DOTTIMES        [ shift and go to state 72 ]
  ! DOTDIVIDE       [ shift and go to state 73 ]


state 113

    (66) expression -> expression DOTPLUS expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    <               reduce using rule 66 (expression -> expression DOTPLUS expression .)
    >               reduce using rule 66 (expression -> expression DOTPLUS expression .)
    LESSEQUAL       reduce using rule 66 (expression -> expression DOTPLUS expression .)
    GREATEREQUAL    reduce using rule 66 (expression -> expression DOTPLUS expression .)
    EQUAL           reduce using rule 66 (expression -> expression DOTPLUS expression .)
    NOTEQUAL        reduce using rule 66 (expression -> expression DOTPLUS expression .)
    +               reduce using rule 66 (expression -> expression DOTPLUS expression .)
    -               reduce using rule 66 (expression -> expression DOTPLUS expression .)
    DOTPLUS         reduce using rule 66 (expression -> expression DOTPLUS expression .)
    DOTMINUS        reduce using rule 66 (expression -> expression DOTPLUS expression .)
    ,               reduce using rule 66 (expression -> expression DOTPLUS expression .)
    ;               reduce using rule 66 (expression -> expression DOTPLUS expression .)
    )               reduce using rule 66 (expression -> expression DOTPLUS expression .)
    :               reduce using rule 66 (expression -> expression DOTPLUS expression .)
    {               reduce using rule 66 (expression -> expression DOTPLUS expression .)
    IF              reduce using rule 66 (expression -> expression DOTPLUS expression .)
    PRINT           reduce using rule 66 (expression -> expression DOTPLUS expression .)
    WHILE           reduce using rule 66 (expression -> expression DOTPLUS expression .)
    FOR             reduce using rule 66 (expression -> expression DOTPLUS expression .)
    BREAK           reduce using rule 66 (expression -> expression DOTPLUS expression .)
    CONTINUE        reduce using rule 66 (expression -> expression DOTPLUS expression .)
    RETURN          reduce using rule 66 (expression -> expression DOTPLUS expression .)
    ID              reduce using rule 66 (expression -> expression DOTPLUS expression .)
    *               shift and go to state 68
    /               shift and go to state 69
    DOTTIMES        shift and go to state 72
    DOTDIVIDE       shift and go to state 73

  ! *               [ reduce using rule 66 (expression -> expression DOTPLUS expression .) ]
  ! /               [ reduce using rule 66 (expression -> expression DOTPLUS expression .) ]
  ! DOTTIMES        [ reduce using rule 66 (expression -> expression DOTPLUS expression .) ]
  ! DOTDIVIDE       [ reduce using rule 66 (expression -> expression DOTPLUS expression .) ]
  ! +               [ shift and go to state 66 ]
  ! -               [ shift and go to state 67 ]
  ! DOTPLUS         [ shift and go to state 70 ]
  ! DOTMINUS        [ shift and go to state 71 ]


state 114

    (67) expression -> expression DOTMINUS expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    <               reduce using rule 67 (expression -> expression DOTMINUS expression .)
    >               reduce using rule 67 (expression -> expression DOTMINUS expression .)
    LESSEQUAL       reduce using rule 67 (expression -> expression DOTMINUS expression .)
    GREATEREQUAL    reduce using rule 67 (expression -> expression DOTMINUS expression .)
    EQUAL           reduce using rule 67 (expression -> expression DOTMINUS expression .)
    NOTEQUAL        reduce using rule 67 (expression -> expression DOTMINUS expression .)
    +               reduce using rule 67 (expression -> expression DOTMINUS expression .)
    -               reduce using rule 67 (expression -> expression DOTMINUS expression .)
    DOTPLUS         reduce using rule 67 (expression -> expression DOTMINUS expression .)
    DOTMINUS        reduce using rule 67 (expression -> expression DOTMINUS expression .)
    ,               reduce using rule 67 (expression -> expression DOTMINUS expression .)
    ;               reduce using rule 67 (expression -> expression DOTMINUS expression .)
    )               reduce using rule 67 (expression -> expression DOTMINUS expression .)
    :               reduce using rule 67 (expression -> expression DOTMINUS expression .)
    {               reduce using rule 67 (expression -> expression DOTMINUS expression .)
    IF              reduce using rule 67 (expression -> expression DOTMINUS expression .)
    PRINT           reduce using rule 67 (expression -> expression DOTMINUS expression .)
    WHILE           reduce using rule 67 (expression -> expression DOTMINUS expression .)
    FOR             reduce using rule 67 (expression -> expression DOTMINUS expression .)
    BREAK           reduce using rule 67 (expression -> expression DOTMINUS expression .)
    CONTINUE        reduce using rule 67 (expression -> expression DOTMINUS expression .)
    RETURN          reduce using rule 67 (expression -> expression DOTMINUS expression .)
    ID              reduce using rule 67 (expression -> expression DOTMINUS expression .)
    *               shift and go to state 68
    /               shift and go to state 69
    DOTTIMES        shift and go to state 72
    DOTDIVIDE       shift and go to state 73

  ! *               [ reduce using rule 67 (expression -> expression DOTMINUS expression .) ]
  ! /               [ reduce using rule 67 (expression -> expression DOTMINUS expression .) ]
  ! DOTTIMES        [ reduce using rule 67 (expression -> expression DOTMINUS expression .) ]
  ! DOTDIVIDE       [ reduce using rule 67 (expression -> expression DOTMINUS expression .) ]
  ! +               [ shift and go to state 66 ]
  ! -               [ shift and go to state 67 ]
  ! DOTPLUS         [ shift and go to state 70 ]
  ! DOTMINUS        [ shift and go to state 71 ]


state 115

    (68) expression -> expression DOTTIMES expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    <               reduce using rule 68 (expression -> expression DOTTIMES expression .)
    >               reduce using rule 68 (expression -> expression DOTTIMES expression .)
    LESSEQUAL       reduce using rule 68 (expression -> expression DOTTIMES expression .)
    GREATEREQUAL    reduce using rule 68 (expression -> expression DOTTIMES expression .)
    EQUAL           reduce using rule 68 (expression -> expression DOTTIMES expression .)
    NOTEQUAL        reduce using rule 68 (expression -> expression DOTTIMES expression .)
    +               reduce using rule 68 (expression -> expression DOTTIMES expression .)
    -               reduce using rule 68 (expression -> expression DOTTIMES expression .)
    *               reduce using rule 68 (expression -> expression DOTTIMES expression .)
    /               reduce using rule 68 (expression -> expression DOTTIMES expression .)
    DOTPLUS         reduce using rule 68 (expression -> expression DOTTIMES expression .)
    DOTMINUS        reduce using rule 68 (expression -> expression DOTTIMES expression .)
    DOTTIMES        reduce using rule 68 (expression -> expression DOTTIMES expression .)
    DOTDIVIDE       reduce using rule 68 (expression -> expression DOTTIMES expression .)
    ,               reduce using rule 68 (expression -> expression DOTTIMES expression .)
    ;               reduce using rule 68 (expression -> expression DOTTIMES expression .)
    )               reduce using rule 68 (expression -> expression DOTTIMES expression .)
    :               reduce using rule 68 (expression -> expression DOTTIMES expression .)
    {               reduce using rule 68 (expression -> expression DOTTIMES expression .)
    IF              reduce using rule 68 (expression -> expression DOTTIMES expression .)
    PRINT           reduce using rule 68 (expression -> expression DOTTIMES expression .)
    WHILE           reduce using rule 68 (expression -> expression DOTTIMES expression .)
    FOR             reduce using rule 68 (expression -> expression DOTTIMES expression .)
    BREAK           reduce using rule 68 (expression -> expression DOTTIMES expression .)
    CONTINUE        reduce using rule 68 (expression -> expression DOTTIMES expression .)
    RETURN          reduce using rule 68 (expression -> expression DOTTIMES expression .)
    ID              reduce using rule 68 (expression -> expression DOTTIMES expression .)

  ! +               [ shift and go to state 66 ]
  ! -               [ shift and go to state 67 ]
  ! *               [ shift and go to state 68 ]
  ! /               [ shift and go to state 69 ]
  ! DOTPLUS         [ shift and go to state 70 ]
  ! DOTMINUS        [ shift and go to state 71 ]
  ! DOTTIMES        [ shift and go to state 72 ]
  ! DOTDIVIDE       [ shift and go to state 73 ]


state 116

    (69) expression -> expression DOTDIVIDE expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    <               reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    >               reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    LESSEQUAL       reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    GREATEREQUAL    reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    EQUAL           reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    NOTEQUAL        reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    +               reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    -               reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    *               reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    /               reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    DOTPLUS         reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    DOTMINUS        reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    DOTTIMES        reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    DOTDIVIDE       reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    ,               reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    ;               reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    )               reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    :               reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    {               reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    IF              reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    PRINT           reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    WHILE           reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    FOR             reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    BREAK           reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    CONTINUE        reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    RETURN          reduce using rule 69 (expression -> expression DOTDIVIDE expression .)
    ID              reduce using rule 69 (expression -> expression DOTDIVIDE expression .)

  ! +               [ shift and go to state 66 ]
  ! -               [ shift and go to state 67 ]
  ! *               [ shift and go to state 68 ]
  ! /               [ shift and go to state 69 ]
  ! DOTPLUS         [ shift and go to state 70 ]
  ! DOTMINUS        [ shift and go to state 71 ]
  ! DOTTIMES        [ shift and go to state 72 ]
  ! DOTDIVIDE       [ shift and go to state 73 ]


state 117

    (74) matrix_special_features -> EYE ( INTNUM . )

    )               shift and go to state 140


state 118

    (75) matrix_special_features -> ZEROS ( INTNUM . )

    )               shift and go to state 141


state 119

    (76) matrix_special_features -> ONES ( INTNUM . )

    )               shift and go to state 142


state 120

    (49) array -> [ dimensions ] .

    ,               reduce using rule 49 (array -> [ dimensions ] .)
    ;               reduce using rule 49 (array -> [ dimensions ] .)
    )               reduce using rule 49 (array -> [ dimensions ] .)


state 121

    (51) dimensions -> values ; . dimensions
    (50) dimensions -> . values
    (51) dimensions -> . values ; dimensions
    (52) values -> . value
    (53) values -> . value , values
    (54) value -> . STRING
    (55) value -> . number
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 83
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    values                         shift and go to state 81
    dimensions                     shift and go to state 143
    value                          shift and go to state 82
    number                         shift and go to state 84

state 122

    (53) values -> value , . values
    (52) values -> . value
    (53) values -> . value , values
    (54) value -> . STRING
    (55) value -> . number
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    STRING          shift and go to state 83
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    value                          shift and go to state 82
    values                         shift and go to state 144
    number                         shift and go to state 84

state 123

    (22) while -> WHILE ( assignment ) . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID PLUSASSIGN assignment ;
    (32) assign -> . ID MINUSASSIGN assignment ;
    (33) assign -> . ID TIMESASSIGN assignment ;
    (34) assign -> . ID DIVIDEASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range PLUSASSIGN assignment ;
    (38) assign_in_array -> . ID array_range MINUSASSIGN assignment ;
    (39) assign_in_array -> . ID array_range TIMESASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVIDEASSIGN assignment ;

    {               shift and go to state 15
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    BREAK           shift and go to state 21
    CONTINUE        shift and go to state 22
    RETURN          shift and go to state 23
    ID              shift and go to state 20

    instruction                    shift and go to state 145
    block                          shift and go to state 5
    if                             shift and go to state 6
    print                          shift and go to state 7
    while                          shift and go to state 8
    for                            shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    return                         shift and go to state 12
    assign                         shift and go to state 13
    assign_in_array                shift and go to state 14

state 124

    (23) for -> FOR ID = range . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID PLUSASSIGN assignment ;
    (32) assign -> . ID MINUSASSIGN assignment ;
    (33) assign -> . ID TIMESASSIGN assignment ;
    (34) assign -> . ID DIVIDEASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range PLUSASSIGN assignment ;
    (38) assign_in_array -> . ID array_range MINUSASSIGN assignment ;
    (39) assign_in_array -> . ID array_range TIMESASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVIDEASSIGN assignment ;

    {               shift and go to state 15
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    BREAK           shift and go to state 21
    CONTINUE        shift and go to state 22
    RETURN          shift and go to state 23
    ID              shift and go to state 20

    instruction                    shift and go to state 146
    block                          shift and go to state 5
    if                             shift and go to state 6
    print                          shift and go to state 7
    while                          shift and go to state 8
    for                            shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    return                         shift and go to state 12
    assign                         shift and go to state 13
    assign_in_array                shift and go to state 14

state 125

    (24) range -> expression . : expression
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    :               shift and go to state 147
    +               shift and go to state 66
    -               shift and go to state 67
    *               shift and go to state 68
    /               shift and go to state 69
    DOTPLUS         shift and go to state 70
    DOTMINUS        shift and go to state 71
    DOTTIMES        shift and go to state 72
    DOTDIVIDE       shift and go to state 73


state 126

    (30) assign -> ID = assignment ; .

    {               reduce using rule 30 (assign -> ID = assignment ; .)
    IF              reduce using rule 30 (assign -> ID = assignment ; .)
    PRINT           reduce using rule 30 (assign -> ID = assignment ; .)
    WHILE           reduce using rule 30 (assign -> ID = assignment ; .)
    FOR             reduce using rule 30 (assign -> ID = assignment ; .)
    BREAK           reduce using rule 30 (assign -> ID = assignment ; .)
    CONTINUE        reduce using rule 30 (assign -> ID = assignment ; .)
    RETURN          reduce using rule 30 (assign -> ID = assignment ; .)
    ID              reduce using rule 30 (assign -> ID = assignment ; .)
    $end            reduce using rule 30 (assign -> ID = assignment ; .)
    }               reduce using rule 30 (assign -> ID = assignment ; .)
    ELSE            reduce using rule 30 (assign -> ID = assignment ; .)


state 127

    (31) assign -> ID PLUSASSIGN assignment ; .

    {               reduce using rule 31 (assign -> ID PLUSASSIGN assignment ; .)
    IF              reduce using rule 31 (assign -> ID PLUSASSIGN assignment ; .)
    PRINT           reduce using rule 31 (assign -> ID PLUSASSIGN assignment ; .)
    WHILE           reduce using rule 31 (assign -> ID PLUSASSIGN assignment ; .)
    FOR             reduce using rule 31 (assign -> ID PLUSASSIGN assignment ; .)
    BREAK           reduce using rule 31 (assign -> ID PLUSASSIGN assignment ; .)
    CONTINUE        reduce using rule 31 (assign -> ID PLUSASSIGN assignment ; .)
    RETURN          reduce using rule 31 (assign -> ID PLUSASSIGN assignment ; .)
    ID              reduce using rule 31 (assign -> ID PLUSASSIGN assignment ; .)
    $end            reduce using rule 31 (assign -> ID PLUSASSIGN assignment ; .)
    }               reduce using rule 31 (assign -> ID PLUSASSIGN assignment ; .)
    ELSE            reduce using rule 31 (assign -> ID PLUSASSIGN assignment ; .)


state 128

    (32) assign -> ID MINUSASSIGN assignment ; .

    {               reduce using rule 32 (assign -> ID MINUSASSIGN assignment ; .)
    IF              reduce using rule 32 (assign -> ID MINUSASSIGN assignment ; .)
    PRINT           reduce using rule 32 (assign -> ID MINUSASSIGN assignment ; .)
    WHILE           reduce using rule 32 (assign -> ID MINUSASSIGN assignment ; .)
    FOR             reduce using rule 32 (assign -> ID MINUSASSIGN assignment ; .)
    BREAK           reduce using rule 32 (assign -> ID MINUSASSIGN assignment ; .)
    CONTINUE        reduce using rule 32 (assign -> ID MINUSASSIGN assignment ; .)
    RETURN          reduce using rule 32 (assign -> ID MINUSASSIGN assignment ; .)
    ID              reduce using rule 32 (assign -> ID MINUSASSIGN assignment ; .)
    $end            reduce using rule 32 (assign -> ID MINUSASSIGN assignment ; .)
    }               reduce using rule 32 (assign -> ID MINUSASSIGN assignment ; .)
    ELSE            reduce using rule 32 (assign -> ID MINUSASSIGN assignment ; .)


state 129

    (33) assign -> ID TIMESASSIGN assignment ; .

    {               reduce using rule 33 (assign -> ID TIMESASSIGN assignment ; .)
    IF              reduce using rule 33 (assign -> ID TIMESASSIGN assignment ; .)
    PRINT           reduce using rule 33 (assign -> ID TIMESASSIGN assignment ; .)
    WHILE           reduce using rule 33 (assign -> ID TIMESASSIGN assignment ; .)
    FOR             reduce using rule 33 (assign -> ID TIMESASSIGN assignment ; .)
    BREAK           reduce using rule 33 (assign -> ID TIMESASSIGN assignment ; .)
    CONTINUE        reduce using rule 33 (assign -> ID TIMESASSIGN assignment ; .)
    RETURN          reduce using rule 33 (assign -> ID TIMESASSIGN assignment ; .)
    ID              reduce using rule 33 (assign -> ID TIMESASSIGN assignment ; .)
    $end            reduce using rule 33 (assign -> ID TIMESASSIGN assignment ; .)
    }               reduce using rule 33 (assign -> ID TIMESASSIGN assignment ; .)
    ELSE            reduce using rule 33 (assign -> ID TIMESASSIGN assignment ; .)


state 130

    (34) assign -> ID DIVIDEASSIGN assignment ; .

    {               reduce using rule 34 (assign -> ID DIVIDEASSIGN assignment ; .)
    IF              reduce using rule 34 (assign -> ID DIVIDEASSIGN assignment ; .)
    PRINT           reduce using rule 34 (assign -> ID DIVIDEASSIGN assignment ; .)
    WHILE           reduce using rule 34 (assign -> ID DIVIDEASSIGN assignment ; .)
    FOR             reduce using rule 34 (assign -> ID DIVIDEASSIGN assignment ; .)
    BREAK           reduce using rule 34 (assign -> ID DIVIDEASSIGN assignment ; .)
    CONTINUE        reduce using rule 34 (assign -> ID DIVIDEASSIGN assignment ; .)
    RETURN          reduce using rule 34 (assign -> ID DIVIDEASSIGN assignment ; .)
    ID              reduce using rule 34 (assign -> ID DIVIDEASSIGN assignment ; .)
    $end            reduce using rule 34 (assign -> ID DIVIDEASSIGN assignment ; .)
    }               reduce using rule 34 (assign -> ID DIVIDEASSIGN assignment ; .)
    ELSE            reduce using rule 34 (assign -> ID DIVIDEASSIGN assignment ; .)


state 131

    (35) assign_in_array -> ID array_range = assign .

    {               reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    IF              reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    PRINT           reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    WHILE           reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    FOR             reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    BREAK           reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    CONTINUE        reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    RETURN          reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    ID              reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    $end            reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    }               reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    ELSE            reduce using rule 35 (assign_in_array -> ID array_range = assign .)


state 132

    (36) assign_in_array -> ID array_range = assignment . ;

    ;               shift and go to state 148


state 133

    (37) assign_in_array -> ID array_range PLUSASSIGN assignment . ;

    ;               shift and go to state 149


state 134

    (38) assign_in_array -> ID array_range MINUSASSIGN assignment . ;

    ;               shift and go to state 150


state 135

    (39) assign_in_array -> ID array_range TIMESASSIGN assignment . ;

    ;               shift and go to state 151


state 136

    (40) assign_in_array -> ID array_range DIVIDEASSIGN assignment . ;

    ;               shift and go to state 152


state 137

    (41) array_range -> [ INTNUM , . INTNUM ]

    INTNUM          shift and go to state 153


state 138

    (42) array_range -> [ INTNUM ] .

    =               reduce using rule 42 (array_range -> [ INTNUM ] .)
    PLUSASSIGN      reduce using rule 42 (array_range -> [ INTNUM ] .)
    MINUSASSIGN     reduce using rule 42 (array_range -> [ INTNUM ] .)
    TIMESASSIGN     reduce using rule 42 (array_range -> [ INTNUM ] .)
    DIVIDEASSIGN    reduce using rule 42 (array_range -> [ INTNUM ] .)


state 139

    (17) if -> IF ( assignment ) instruction .
    (18) if -> IF ( assignment ) instruction . ELSE instruction

    {               reduce using rule 17 (if -> IF ( assignment ) instruction .)
    IF              reduce using rule 17 (if -> IF ( assignment ) instruction .)
    PRINT           reduce using rule 17 (if -> IF ( assignment ) instruction .)
    WHILE           reduce using rule 17 (if -> IF ( assignment ) instruction .)
    FOR             reduce using rule 17 (if -> IF ( assignment ) instruction .)
    BREAK           reduce using rule 17 (if -> IF ( assignment ) instruction .)
    CONTINUE        reduce using rule 17 (if -> IF ( assignment ) instruction .)
    RETURN          reduce using rule 17 (if -> IF ( assignment ) instruction .)
    ID              reduce using rule 17 (if -> IF ( assignment ) instruction .)
    $end            reduce using rule 17 (if -> IF ( assignment ) instruction .)
    }               reduce using rule 17 (if -> IF ( assignment ) instruction .)
    ELSE            shift and go to state 154

  ! ELSE            [ reduce using rule 17 (if -> IF ( assignment ) instruction .) ]


state 140

    (74) matrix_special_features -> EYE ( INTNUM ) .

    ,               reduce using rule 74 (matrix_special_features -> EYE ( INTNUM ) .)
    ;               reduce using rule 74 (matrix_special_features -> EYE ( INTNUM ) .)
    )               reduce using rule 74 (matrix_special_features -> EYE ( INTNUM ) .)


state 141

    (75) matrix_special_features -> ZEROS ( INTNUM ) .

    ,               reduce using rule 75 (matrix_special_features -> ZEROS ( INTNUM ) .)
    ;               reduce using rule 75 (matrix_special_features -> ZEROS ( INTNUM ) .)
    )               reduce using rule 75 (matrix_special_features -> ZEROS ( INTNUM ) .)


state 142

    (76) matrix_special_features -> ONES ( INTNUM ) .

    ,               reduce using rule 76 (matrix_special_features -> ONES ( INTNUM ) .)
    ;               reduce using rule 76 (matrix_special_features -> ONES ( INTNUM ) .)
    )               reduce using rule 76 (matrix_special_features -> ONES ( INTNUM ) .)


state 143

    (51) dimensions -> values ; dimensions .

    ]               reduce using rule 51 (dimensions -> values ; dimensions .)


state 144

    (53) values -> value , values .

    ;               reduce using rule 53 (values -> value , values .)
    ]               reduce using rule 53 (values -> value , values .)


state 145

    (22) while -> WHILE ( assignment ) instruction .

    {               reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    IF              reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    PRINT           reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    WHILE           reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    FOR             reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    BREAK           reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    CONTINUE        reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    RETURN          reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    ID              reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    $end            reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    }               reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    ELSE            reduce using rule 22 (while -> WHILE ( assignment ) instruction .)


state 146

    (23) for -> FOR ID = range instruction .

    {               reduce using rule 23 (for -> FOR ID = range instruction .)
    IF              reduce using rule 23 (for -> FOR ID = range instruction .)
    PRINT           reduce using rule 23 (for -> FOR ID = range instruction .)
    WHILE           reduce using rule 23 (for -> FOR ID = range instruction .)
    FOR             reduce using rule 23 (for -> FOR ID = range instruction .)
    BREAK           reduce using rule 23 (for -> FOR ID = range instruction .)
    CONTINUE        reduce using rule 23 (for -> FOR ID = range instruction .)
    RETURN          reduce using rule 23 (for -> FOR ID = range instruction .)
    ID              reduce using rule 23 (for -> FOR ID = range instruction .)
    $end            reduce using rule 23 (for -> FOR ID = range instruction .)
    }               reduce using rule 23 (for -> FOR ID = range instruction .)
    ELSE            reduce using rule 23 (for -> FOR ID = range instruction .)


state 147

    (24) range -> expression : . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTPLUS expression
    (67) expression -> . expression DOTMINUS expression
    (68) expression -> . expression DOTTIMES expression
    (69) expression -> . expression DOTDIVIDE expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOATNUM

    ID              shift and go to state 40
    -               shift and go to state 38
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 42

    expression                     shift and go to state 155
    number                         shift and go to state 39

state 148

    (36) assign_in_array -> ID array_range = assignment ; .

    {               reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    IF              reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    PRINT           reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    WHILE           reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    FOR             reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    BREAK           reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    CONTINUE        reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    RETURN          reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    ID              reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    $end            reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    }               reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    ELSE            reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)


state 149

    (37) assign_in_array -> ID array_range PLUSASSIGN assignment ; .

    {               reduce using rule 37 (assign_in_array -> ID array_range PLUSASSIGN assignment ; .)
    IF              reduce using rule 37 (assign_in_array -> ID array_range PLUSASSIGN assignment ; .)
    PRINT           reduce using rule 37 (assign_in_array -> ID array_range PLUSASSIGN assignment ; .)
    WHILE           reduce using rule 37 (assign_in_array -> ID array_range PLUSASSIGN assignment ; .)
    FOR             reduce using rule 37 (assign_in_array -> ID array_range PLUSASSIGN assignment ; .)
    BREAK           reduce using rule 37 (assign_in_array -> ID array_range PLUSASSIGN assignment ; .)
    CONTINUE        reduce using rule 37 (assign_in_array -> ID array_range PLUSASSIGN assignment ; .)
    RETURN          reduce using rule 37 (assign_in_array -> ID array_range PLUSASSIGN assignment ; .)
    ID              reduce using rule 37 (assign_in_array -> ID array_range PLUSASSIGN assignment ; .)
    $end            reduce using rule 37 (assign_in_array -> ID array_range PLUSASSIGN assignment ; .)
    }               reduce using rule 37 (assign_in_array -> ID array_range PLUSASSIGN assignment ; .)
    ELSE            reduce using rule 37 (assign_in_array -> ID array_range PLUSASSIGN assignment ; .)


state 150

    (38) assign_in_array -> ID array_range MINUSASSIGN assignment ; .

    {               reduce using rule 38 (assign_in_array -> ID array_range MINUSASSIGN assignment ; .)
    IF              reduce using rule 38 (assign_in_array -> ID array_range MINUSASSIGN assignment ; .)
    PRINT           reduce using rule 38 (assign_in_array -> ID array_range MINUSASSIGN assignment ; .)
    WHILE           reduce using rule 38 (assign_in_array -> ID array_range MINUSASSIGN assignment ; .)
    FOR             reduce using rule 38 (assign_in_array -> ID array_range MINUSASSIGN assignment ; .)
    BREAK           reduce using rule 38 (assign_in_array -> ID array_range MINUSASSIGN assignment ; .)
    CONTINUE        reduce using rule 38 (assign_in_array -> ID array_range MINUSASSIGN assignment ; .)
    RETURN          reduce using rule 38 (assign_in_array -> ID array_range MINUSASSIGN assignment ; .)
    ID              reduce using rule 38 (assign_in_array -> ID array_range MINUSASSIGN assignment ; .)
    $end            reduce using rule 38 (assign_in_array -> ID array_range MINUSASSIGN assignment ; .)
    }               reduce using rule 38 (assign_in_array -> ID array_range MINUSASSIGN assignment ; .)
    ELSE            reduce using rule 38 (assign_in_array -> ID array_range MINUSASSIGN assignment ; .)


state 151

    (39) assign_in_array -> ID array_range TIMESASSIGN assignment ; .

    {               reduce using rule 39 (assign_in_array -> ID array_range TIMESASSIGN assignment ; .)
    IF              reduce using rule 39 (assign_in_array -> ID array_range TIMESASSIGN assignment ; .)
    PRINT           reduce using rule 39 (assign_in_array -> ID array_range TIMESASSIGN assignment ; .)
    WHILE           reduce using rule 39 (assign_in_array -> ID array_range TIMESASSIGN assignment ; .)
    FOR             reduce using rule 39 (assign_in_array -> ID array_range TIMESASSIGN assignment ; .)
    BREAK           reduce using rule 39 (assign_in_array -> ID array_range TIMESASSIGN assignment ; .)
    CONTINUE        reduce using rule 39 (assign_in_array -> ID array_range TIMESASSIGN assignment ; .)
    RETURN          reduce using rule 39 (assign_in_array -> ID array_range TIMESASSIGN assignment ; .)
    ID              reduce using rule 39 (assign_in_array -> ID array_range TIMESASSIGN assignment ; .)
    $end            reduce using rule 39 (assign_in_array -> ID array_range TIMESASSIGN assignment ; .)
    }               reduce using rule 39 (assign_in_array -> ID array_range TIMESASSIGN assignment ; .)
    ELSE            reduce using rule 39 (assign_in_array -> ID array_range TIMESASSIGN assignment ; .)


state 152

    (40) assign_in_array -> ID array_range DIVIDEASSIGN assignment ; .

    {               reduce using rule 40 (assign_in_array -> ID array_range DIVIDEASSIGN assignment ; .)
    IF              reduce using rule 40 (assign_in_array -> ID array_range DIVIDEASSIGN assignment ; .)
    PRINT           reduce using rule 40 (assign_in_array -> ID array_range DIVIDEASSIGN assignment ; .)
    WHILE           reduce using rule 40 (assign_in_array -> ID array_range DIVIDEASSIGN assignment ; .)
    FOR             reduce using rule 40 (assign_in_array -> ID array_range DIVIDEASSIGN assignment ; .)
    BREAK           reduce using rule 40 (assign_in_array -> ID array_range DIVIDEASSIGN assignment ; .)
    CONTINUE        reduce using rule 40 (assign_in_array -> ID array_range DIVIDEASSIGN assignment ; .)
    RETURN          reduce using rule 40 (assign_in_array -> ID array_range DIVIDEASSIGN assignment ; .)
    ID              reduce using rule 40 (assign_in_array -> ID array_range DIVIDEASSIGN assignment ; .)
    $end            reduce using rule 40 (assign_in_array -> ID array_range DIVIDEASSIGN assignment ; .)
    }               reduce using rule 40 (assign_in_array -> ID array_range DIVIDEASSIGN assignment ; .)
    ELSE            reduce using rule 40 (assign_in_array -> ID array_range DIVIDEASSIGN assignment ; .)


state 153

    (41) array_range -> [ INTNUM , INTNUM . ]

    ]               shift and go to state 156


state 154

    (18) if -> IF ( assignment ) instruction ELSE . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID PLUSASSIGN assignment ;
    (32) assign -> . ID MINUSASSIGN assignment ;
    (33) assign -> . ID TIMESASSIGN assignment ;
    (34) assign -> . ID DIVIDEASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range PLUSASSIGN assignment ;
    (38) assign_in_array -> . ID array_range MINUSASSIGN assignment ;
    (39) assign_in_array -> . ID array_range TIMESASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVIDEASSIGN assignment ;

    {               shift and go to state 15
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    BREAK           shift and go to state 21
    CONTINUE        shift and go to state 22
    RETURN          shift and go to state 23
    ID              shift and go to state 20

    instruction                    shift and go to state 157
    block                          shift and go to state 5
    if                             shift and go to state 6
    print                          shift and go to state 7
    while                          shift and go to state 8
    for                            shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    return                         shift and go to state 12
    assign                         shift and go to state 13
    assign_in_array                shift and go to state 14

state 155

    (24) range -> expression : expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTPLUS expression
    (67) expression -> expression . DOTMINUS expression
    (68) expression -> expression . DOTTIMES expression
    (69) expression -> expression . DOTDIVIDE expression

    {               reduce using rule 24 (range -> expression : expression .)
    IF              reduce using rule 24 (range -> expression : expression .)
    PRINT           reduce using rule 24 (range -> expression : expression .)
    WHILE           reduce using rule 24 (range -> expression : expression .)
    FOR             reduce using rule 24 (range -> expression : expression .)
    BREAK           reduce using rule 24 (range -> expression : expression .)
    CONTINUE        reduce using rule 24 (range -> expression : expression .)
    RETURN          reduce using rule 24 (range -> expression : expression .)
    ID              reduce using rule 24 (range -> expression : expression .)
    +               shift and go to state 66
    -               shift and go to state 67
    *               shift and go to state 68
    /               shift and go to state 69
    DOTPLUS         shift and go to state 70
    DOTMINUS        shift and go to state 71
    DOTTIMES        shift and go to state 72
    DOTDIVIDE       shift and go to state 73


state 156

    (41) array_range -> [ INTNUM , INTNUM ] .

    =               reduce using rule 41 (array_range -> [ INTNUM , INTNUM ] .)
    PLUSASSIGN      reduce using rule 41 (array_range -> [ INTNUM , INTNUM ] .)
    MINUSASSIGN     reduce using rule 41 (array_range -> [ INTNUM , INTNUM ] .)
    TIMESASSIGN     reduce using rule 41 (array_range -> [ INTNUM , INTNUM ] .)
    DIVIDEASSIGN    reduce using rule 41 (array_range -> [ INTNUM , INTNUM ] .)


state 157

    (18) if -> IF ( assignment ) instruction ELSE instruction .

    {               reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    IF              reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    PRINT           reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    WHILE           reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    FOR             reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    BREAK           reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    RETURN          reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    ID              reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    $end            reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    }               reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    ELSE            reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)

